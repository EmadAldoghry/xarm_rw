<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <xacro:include filename="inertial_macros.xacro"/>

    <xacro:property name="chassis_length" value="0.96"/>
    <xacro:property name="chassis_width" value="1.04"/>
    <xacro:property name="chassis_height" value="0.819924"/>
    <xacro:property name="chassis_mass" value="1.0"/>
    <xacro:property name="chassis_density" value="7850.0"/> <!-- Steel -->
    <xacro:property name="chassis_mass" value="${chassis_density * chassis_length * chassis_height * chassis_width}"/>
    <xacro:property name="chassis_inertia_x" value="${1.0/12.0 * chassis_mass * (chassis_height*chassis_height + chassis_width*chassis_width)}"/>
    <xacro:property name="chassis_inertia_y" value="${1.0/12.0 * chassis_mass * (chassis_length*chassis_length + chassis_height*chassis_height)}"/>
    <xacro:property name="chassis_inertia_z" value="${1.0/12.0 * chassis_mass * (chassis_length*chassis_length + chassis_width*chassis_width)}"/>

    <xacro:property name="wheel_offset_x" value="0.226"/>
    <xacro:property name="wheel_offset_y" value="0.1485"/>
    <xacro:property name="wheel_offset_z" value="0.01"/>

    <xacro:property name="wheel_radius" value="0.033"/>
    <xacro:property name="wheel_thickness" value="0.026"/>
    <xacro:property name="wheel_mass" value="0.05"/>

    <xacro:property name="caster_wheel_radius" value="0.01"/>
    <xacro:property name="caster_wheel_mass" value="0.01"/>

    <xacro:property name="caster_wheel_offset_x" value="0.439948"/>
    <xacro:property name="caster_wheel_offset_y" value="0.490706"/>
    <xacro:property name="caster_wheel_offset_z" value="0.04"/>


    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="gray">
        <color rgba="0.7529 0.7529 0.7529 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>E
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>



    <!-- BASE LINK -->

    <link name="base_link">

    </link>

    <!-- BASE_FOOTPRINT LINK -->

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <link name="base_footprint">
    </link>

    <!-- CHASSIS LINK -->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="0 0 0"/>
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/base_link.stl" />
            </geometry>
            <material name="gray"/>
        </visual>
        <collision>
            <origin xyz="0 0 0"/>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/base_link.stl" />
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/Gray</material>
    </gazebo>

    <!-- LEFT WHEEL LINK -->

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="0 ${-chassis_width/2} 0" rpy="0 0 0" />
        <axis xyz="0 -1 0"/>
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/left_wheel.stl" />
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/left_wheel.stl" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="left_wheel">
        <material>Gazebo/Black</material>
    </gazebo>

    <!-- RIGHT WHEEL LINK -->

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="0 ${chassis_width/2} 0" rpy="0 0 0" />
        <axis xyz="0 -1 0"/>
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/right_wheel.stl" />
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/right_wheel.stl" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="right_wheel">
        <material>Gazebo/Black</material>
    </gazebo>
    
    <!-- FRONT RIGHT CASTER WHEEL LINK -->

    <joint name="front_right_caster_wheel_joint" type="fixed">
        <parent link="chassis"/>
        <child link="front_right_caster_wheel"/>
        <origin xyz="${-caster_wheel_offset_x} ${-caster_wheel_offset_y} ${-caster_wheel_offset_z}"/>
    </joint>


    <link name="front_right_caster_wheel">
        <visual>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/front_right_Cwheel.stl" />
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/front_right_Cwheel.stl" />
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="caster_wheel">
        <material>Gazebo/White</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>

    <!-- FRONT LEFT CASTER WHEEL LINK -->

    <joint name="front_left_caster_wheel_joint" type="fixed">
        <parent link="chassis"/>
        <child link="front_left_caster_wheel"/>
        <origin xyz="${-caster_wheel_offset_x} ${caster_wheel_offset_y} ${-caster_wheel_offset_z}"/>
    </joint>


    <link name="front_left_caster_wheel">
        <visual>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/front_left_Cwheel.stl" />
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/front_left_Cwheel.stl" />
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="caster_wheel">
        <material>Gazebo/White</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>

    <!-- BACK RIGHT CASTER WHEEL LINK -->

    <joint name="back_right_caster_wheel_joint" type="fixed">
        <parent link="chassis"/>
        <child link="back_right_caster_wheel"/>
        <origin xyz="${caster_wheel_offset_x} ${-caster_wheel_offset_y} ${-caster_wheel_offset_z}"/>
    </joint>


    <link name="back_right_caster_wheel">
        <visual>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/back_right_Cwheel.stl" />
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/back_right_Cwheel.stl" />
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="caster_wheel">
        <material>Gazebo/White</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>

    <!-- BACK LEFT CASTER WHEEL LINK -->

    <joint name="back_left_caster_wheel_joint" type="fixed">
        <parent link="chassis"/>
        <child link="back_left_caster_wheel"/>
        <origin xyz="${caster_wheel_offset_x} ${caster_wheel_offset_y} ${-caster_wheel_offset_z}"/>
    </joint>


    <link name="back_left_caster_wheel">
        <visual>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/back_left_Cwheel.stl" />
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <mesh filename="file://$(find rw)/meshes/back_left_Cwheel.stl" />
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="caster_wheel">
        <material>Gazebo/White</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>

</robot>